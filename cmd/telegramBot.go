package main

import (
	"OnlyPDF/app/handlers"
	"OnlyPDF/app/repositories/memory"
	"OnlyPDF/app/usecase/impl"
	"fmt"
	"gopkg.in/telebot.v3"
	"os"
	"time"
)

type OnlyPDFBot struct {
	handler *handlers.Handlers
}

var defaultMsg = "–ü—Ä–∏–≤–µ—Ç, —ç—Ç–æ OnlyPDFBot, –ø—Ä–µ–¥–Ω–∞–∑–Ω–∞—á–µ–Ω–Ω—ã–π " +
	"–¥–ª—è —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è pdf —Ñ–∞–π–ª–æ–≤. –î–ª—è –±–æ–ª–µ–µ –ø–æ–¥—Ä–æ–±–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ " +
	"–¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∫–æ–º–∞–Ω–¥–∞—Ö –≤–æ—Å–ø–æ–ª—å–∑—É–π—Å—è –∫–æ–º–∞–Ω–¥–æ–π /help –∏–ª–∏ –Ω–∞–∂–º–∏ –Ω–∞" +
	" –∫–Ω–æ–ø–∫—É –ø–æ–º–æ—â—å."

var helpMsg = "–ö–∞–∫ –æ–Ω–æ —Ä–∞–±–æ—Ç–∞–µ—Ç? \n" +
	"–ö–∞–∂–¥—ã–π –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–π –ø–¥—Ñ —Ñ–∞–π–ª –≤ —á–∞—Ç —Å –±–æ—Ç–æ–º –¥–æ–±–∞–≤–ª—è–µ—Ç—Å—è –≤ –æ—á–µ—Ä–µ–¥—å, " +
	"–∞ –∑–∞—Ç–µ–º –≤—Å—è –æ—á–µ—Ä–µ–¥—å –æ–±—ä–µ–¥–∏–Ω—è–µ—Ç—Å—è c–≤–µ—Ä—Ö—É –≤–Ω–∏–∑.\n\n" +
	"–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã: \n" +
	"–û–±—ä–µ–¥–∏–Ω–∏—Ç—å (/merge) - –æ–±—ä–µ–¥–∏–Ω–µ–Ω–∏–µ —Ñ–∞–π–ª–æ–≤ \n" +
	"–æ—Ç–æ–±—Ä–∞–∑–∏—Ç—å (/print) - –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∑–∞–≥—Ä—É–∂–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤ \n" +
	"–æ—á–∏—Å—Ç–∏—Ç—å (/clear) - –æ—á–∏—Å—Ç–∫–∞ –∑–∞–≥—Ä—É–∂–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤ –≤ –æ—á–µ—Ä–µ–¥—å—é \n" +
	"–ø–æ–º–æ—â—å (/help) - –ø–æ–º–æ—â—å. \n" +
	"–ù–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –±–æ—Ç –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –∏—Ç–æ–≥–æ–≤—ã–π —Ñ–∞–π–ª–∞ –º–∞–∫—Å–∏–º—É–º —Ä–∞–∑–º–µ—Ä–æ–º 50 –ú–±, \n" +
	"–∞ –ø–æ–ª—É—á–∏—Ç—å —Ñ–∞–π–ª –º–∞–∫—Å–∏–º—É–º 20 –ú–±."

func CreateOnlyPDFBot() (OnlyPDFBot, error) {
	repo, err := memory.CreateFilesPostgresInMemory()
	if err != nil {
		return OnlyPDFBot{}, err
	}
	fileUseCase := impl.CreateFileUseCase(repo)
	handler := handlers.CreateHandlers(fileUseCase)
	return OnlyPDFBot{handler}, nil
}

func (b *OnlyPDFBot) StartListenAndServ() {
	bot, err := telebot.NewBot(telebot.Settings{Token: os.Getenv("OnlyPDFBotToken"), Poller: &telebot.LongPoller{Timeout: 10 * time.Second}})
	if err != nil {
		fmt.Println(err.Error())
		return
	}
	//bot.Use(middleware.Logger())
	menu := &telebot.ReplyMarkup{ResizeKeyboard: true}
	btnPrint := menu.Text("üñ® –û—Ç–æ–±—Ä–∞–∑–∏—Ç—å")
	btnMerge := menu.Text("üíæ –û–±—ä–µ–¥–∏–Ω–∏—Ç—å")
	btnClear := menu.Text("üß´ –û—á–∏—Å—Ç–∏—Ç—å")
	btnHelp := menu.Text("üÜò –ü–æ–º–æ—â—å")

	menu.Reply(
		menu.Row(btnPrint),
		menu.Row(btnMerge),
		menu.Row(btnClear),
		menu.Row(btnHelp),
	)
	bot.Handle(telebot.OnDocument, b.handler.AddFiles)
	bot.Handle("/start", func(ctx telebot.Context) error {
		return ctx.Send(defaultMsg, menu)
	})
	bot.Handle(&btnHelp, func(ctx telebot.Context) error {
		return ctx.Send(helpMsg, menu)
	})
	bot.Handle(&btnPrint, b.handler.ShowFiles)
	bot.Handle(&btnClear, b.handler.ClearFiles)
	bot.Handle(&btnMerge, func(ctx telebot.Context) error {
		err := b.handler.Merge(ctx, bot)
		if err != nil {
			return err
		}
		return nil
	})
	bot.Handle("/help", func(ctx telebot.Context) error {
		return ctx.Send(helpMsg, menu)
	})
	bot.Handle("/print", b.handler.ShowFiles)
	bot.Handle("/clear", b.handler.ClearFiles)
	bot.Handle("/merge", func(ctx telebot.Context) error {
		err := b.handler.Merge(ctx, bot)
		if err != nil {
			return err
		}
		return nil
	})
	bot.Start()
}
